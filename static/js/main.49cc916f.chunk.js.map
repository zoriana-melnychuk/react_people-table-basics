{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PersonRow/PesonRow.tsx","components/PeoplePage/PeoplePage.tsx","utils/getPreparedPeople.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","classNames","sex","to","slug","name","PesonRow","selectedPerson","born","died","mother","motherName","father","fatherName","ErrorMessages","PeoplePage","useParams","useState","people","setPeople","loading","setLoading","NONE","errorMessage","setErrorMessage","useEffect","peopleFromServer","length","peopleWithParents","map","find","personMother","personFather","getPreparedPeople","NO_PEOPLE","catch","DATA","finally","NotFoundPage","getLinkClass","isActive","App","role","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.49cc916f.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n      to={`../${person.slug}`}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  selectedPerson?: string,\n};\n\nexport const PesonRow: React.FC<Props> = ({ person, selectedPerson }) => {\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': selectedPerson === person.slug },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother\n          ? (<PersonLink person={person.mother} />)\n          : person.motherName || '-'}\n      </td>\n      <td>\n        {person.father\n          ? (<PersonLink person={person.father} />)\n          : person.fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { getPreparedPeople } from '../../utils/getPreparedPeople';\nimport { PesonRow } from '../PersonRow/PesonRow';\n\nenum ErrorMessages {\n  NONE = '',\n  DATA = 'Something went wrong',\n  NO_PEOPLE = 'There are no people on the server',\n}\n\nexport const PeoplePage: React.FC = () => {\n  const { selectedPerson } = useParams<string>();\n\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(ErrorMessages.NONE);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getPeople()\n      .then((peopleFromServer) => {\n        if (peopleFromServer.length === 0) {\n          setErrorMessage(ErrorMessages.NO_PEOPLE);\n\n          return;\n        }\n\n        const peopleWithParents = getPreparedPeople(peopleFromServer);\n\n        setPeople(peopleWithParents);\n      })\n      .catch(() => setErrorMessage(ErrorMessages.DATA))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && <Loader />}\n\n          {\n            errorMessage && (\n              <>\n                {errorMessage === ErrorMessages.DATA && (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    {ErrorMessages.DATA}\n                  </p>\n                )}\n                {errorMessage === ErrorMessages.NO_PEOPLE && (\n                  <p data-cy=\"noPeopleMessage\">\n                    {ErrorMessages.NO_PEOPLE}\n                  </p>\n                )}\n              </>\n            )\n          }\n\n          {\n            !loading && !errorMessage && (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {people.map((person) => (\n                    <PesonRow\n                      key={person.slug}\n                      person={person}\n                      selectedPerson={selectedPerson}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            )\n          }\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport const getPreparedPeople = (people: Person[]) => {\n  const preparedPeople = people.map(person => {\n    const mother = people\n      .find(personMother => person.motherName === personMother.name);\n    const father = people\n      .find(personFather => person.fatherName === personFather.name);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n\n  return preparedPeople;\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import React from 'react';\nimport {\n  NavLink,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './App.scss';\n\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => (\n  classNames('navbar-item', { 'has-background-grey-lighter': isActive })\n);\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":selectedPerson\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n      </Routes>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}